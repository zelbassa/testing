Yes, CLion, a popular integrated development environment (IDE) by JetBrains, provides built-in support for running and analyzing memory-related issues, including
memory leaks, in C and C++ programs. CLion integrates with the Valgrind memory analysis tool, which is widely used for detecting memory errors, leaks, and other
memory-related problems.

Here's a general overview of how you can use CLion to check for memory leaks:

1. **Configure Valgrind:**
   - Make sure Valgrind is installed on your system. On Linux, you can typically install it using your package manager. On Windows, you might need to
   use a tool like MSYS2 or Windows Subsystem for Linux (WSL) to install and run Valgrind.
   - Configure CLion to use Valgrind:
     - Open CLion and navigate to "File" > "Settings" (or "CLion" > "Preferences" on macOS).
     - In the settings, go to "Build, Execution, Deployment" > "Dynamic Analysis Tools" > "Valgrind."
     - Specify the path to the Valgrind executable on your system.

2. **Run Your Program with Valgrind:**
   - Open your C project in CLion.
   - Build your project in debug mode.
   - Click on the "Run" menu and choose "Run 'YourProgram' with Valgrind."

3. **Analyze Valgrind Results:**
   - CLion will execute your program using Valgrind and display the results in the "Valgrind" tool window.
   - Look for memory leak information and other memory-related issues in the Valgrind output.

CLion simplifies the process of integrating and running Valgrind, making it convenient for developers to identify
and address memory-related problems in their C and C++ code. Keep in mind that the exact steps may vary slightly
depending on the CLion version and your operating system. Always refer to the official documentation or help
resources provided by JetBrains for the most accurate and up-to-date information.